apply plugin: "java"
apply plugin: 'application'

    group = 'com.bladecoder.engineeditor'

mainClassName = 'com.bladecoder.engineeditor.Main'

// java
    sourceCompatibility = 1.7
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

jar {
	manifest.attributes += [
			'github': 'https://github.com/bladecoder/bladecoder-adventure-engine/',
			'license': 'Apache-2.0',
			'group': project.group,
			'version': project.version,
			'libgdx': libgdxVersion,
			'java': targetCompatibility,
			'timestamp': System.currentTimeMillis()
	]
}

    javadoc {
	title = "Adventure Editor"
	options {
		memberLevel = JavadocMemberLevel.PUBLIC
		author true
		setUse true
    		encoding "UTF-8"
	}
    }

dependencies {
  compile "com.badlogicgames.gdx:gdx:$libgdxVersion"
  compile "com.badlogicgames.gdx:gdx-freetype:$libgdxVersion"
  compile "com.badlogicgames.gdx:gdx-tools:$libgdxVersion"
  compile fileTree(dir: 'libs', include: '*.jar')
  compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$libgdxVersion"
  compile "com.badlogicgames.gdx:gdx-platform:$libgdxVersion:natives-desktop"
  compile "com.badlogicgames.gdx:gdx-freetype-platform:$libgdxVersion:natives-desktop"
  compile "commons-io:commons-io:2.1"
  compile "com.badlogicgames.packr:packr:1.2"
  compile "eu.infomas:annotation-detector:3.0.5"
  
  compile project(":blade-engine")
  compile project(":blade-engine-spine-plugin")
}

task setVersion << {
    	println "Set version info in versions.properties"
    	
    	def props = new Properties()
		def propFile = project.file("./src/main/resources/versions.properties");
		props.load(new FileReader(propFile))
		
		props."version" = version
		props."libgdxVersion" = libgdxVersion
		props."roboVMVersion" = roboVMVersion
		props."roboVMGradlePluginVersion" = roboVMGradlePluginVersion
		props."buildToolsVersion" = buildToolsVersion
		props."androidAPILevel" = androidAPILevel
		props."androidGradlePluginVersion" = androidGradlePluginVersion
		props."gwtVersion" = gwtVersion
		props."gwtGradlePluginVersion" = gwtGradlePluginVersion
		
		def writer = new FileWriter(propFile)
   		try {
      		props.store(writer, "Autogenerated by build.gradle")
      		writer.flush()
   		} finally {
      		writer.close()
   		}
}
	
processResources.finalizedBy(setVersion)
